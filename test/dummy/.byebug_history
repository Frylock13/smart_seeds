exit
skippable_column_names
skippable_column_names.concat keys_with_default_values
keys_with_default_values = model.column_defaults.select{|key, value| value.present? }.keys
skippable_column_names.class
skippable_column_names
exit
skippable_column_names
skippable_column_names.class
skippable_column_names += keys_with_default_values
skippable_column_names
keys_with_default_values = model.column_defaults.select{|key, value| value.present? }.keys
add_skippable_attributes
exit
add_skippable_attributes
skippable_column_names
skippable_column
exit
super
column
exit
generate_faker_value 
is_comatible_with_faker?
exit
klass = convert_column_name.constantize
klass = convert_column_name
exit
klass = convert_column_name
convert_column_name
conver_column_name
exit
column.name.split('_')
convert_column_name
column.name
exit
faker_methods_include_column_name?
faker_classes_include_model_name? 
exit
faker_methods_include_column_name?
faker_classes_include_model_name?
exit
faker_classes = Faker.constants.select {|c| Faker.const_get(c).is_a? Class}
model.name
faker_classes_include_model_name? 
exit
next
generate_enum
is_enum?
Entity.last.status
Entity.last
object
model
column.name
exit
attr.first
object
object[attr.to_s]
attr.last
object[attr.to_s] = attr.last
attrs
attr
attr[attr]
attr.value
object[attr.to_s] 
attr
exit
ignored_attrs + attrs.keys.map(&:to_s)
attrs.keys.map(&:to_s)
attrs.keys
attrs.keys.map(&.to_s)
attrs.keys.map(:.to_s)
attrs.keys.map(&.to_s)
attrs.keys
attrs
ignored_attrs = %w(id created_at updated_at)
ignored_attrs
@ignored_attrs
ignored_attrs
attrs
exit
attrs
exit
attrs
exit
ignored_attrs.include? column_name
ignored_attrs.includes? column_name
column_name
ignored_attrs
exit
object
model
ignored_attrs
exit
column_name
ignored_attrs
exit
is_column_should_be_skipped?(column_name)
exit
is_column_should_be_skipped?(column_name)
column_name
